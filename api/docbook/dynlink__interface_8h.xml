<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dynlink__interface_8h" xml:lang="en-US">
<title>dynlink_interface.h File Reference</title>
<indexterm><primary>dynlink_interface.h</primary></indexterm>
<programlisting>#include &lt;dynlink/dynlink_api.h&gt;
#include &lt;dynlink/dynlink_type.h&gt;
#include &lt;dynlink/dynlink_impl.h&gt;
#include &lt;preprocessor/preprocessor_concatenation.h&gt;
#include &lt;preprocessor/preprocessor_stringify.h&gt;
#include &lt;stdlib.h&gt;
</programlisting>Include dependency graph for dynlink_interface.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dynlink__interface_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dynlink__interface_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structdynlink__impl__interface__type">dynlink_impl_interface</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_dynlink__interface_8h_1ad8a26dbee90709b64932f5bcd4e596de">DYNLINK_SYMBOL_PREFIX_STR</link>()   	<link linkend="_preprocessor__stringify_8h_1ac094787bffb9429bdf67ef52744a6ddb">PREPROCESSOR_STRINGIFY_OR_EMPTY</link>(<link linkend="_dynlink__impl__symbol__win32_8h_1ac5d66723717583b0efbc7c23f9ccd059">DYNLINK_SYMBOL_PREFIX</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_dynlink__interface_8h_1a3b16a8e9c3d36c7699863ae99beea1c3">DYNLINK_SYMBOL_NAME</link>(name)   	<link linkend="_preprocessor__concatenation_8h_1ab8632cfb0b9b4b00a80bd865f34223d1">PREPROCESSOR_CONCAT</link>(<link linkend="_dynlink__impl__symbol__win32_8h_1ac5d66723717583b0efbc7c23f9ccd059">DYNLINK_SYMBOL_PREFIX</link>, name)</para>
</listitem>
            <listitem><para>#define <link linkend="_dynlink__interface_8h_1a21a82e97886b5fff8860f9ad4faed545">DYNLINK_SYMBOL_NAME_STR</link>(name)   	<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(<link linkend="_dynlink__interface_8h_1a3b16a8e9c3d36c7699863ae99beea1c3">DYNLINK_SYMBOL_NAME</link>(name))</para>
</listitem>
            <listitem><para>#define <link linkend="_dynlink__interface_8h_1af77a57ea1674e4e345399d4267422185">DYNLINK_SYMBOL_STR</link>(name)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_dynlink__impl__symbol__beos_8h_1abedcfb8b256940cff900c9a92c628aaf">dynlink_symbol_addr</link> * <link linkend="_dynlink__interface_8h_1a7db607b0a040bc9bf987ca5e1c5539cc">dynlink_symbol_addr_ptr</link></para>
</listitem>
            <listitem><para>typedef const char *(* <link linkend="_dynlink__interface_8h_1abaedd3442a0b899dc1abad65ff6f41c2">dynlink_impl_interface_extension</link>) (void)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_dynlink__interface_8h_1a983f933be9d7b9651828a1ed51b937fb">dynlink_impl_interface_get_name</link>) (<link linkend="_dynlink__type_8h_1a11b32b057aa8ea512ea863e185547cd0">dynlink_name</link>, <link linkend="_dynlink__type_8h_1ae1d8bf84ee2ad46a7513e6d4eb6782fb">dynlink_name_impl</link>, size_t)</para>
</listitem>
            <listitem><para>typedef <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>(* <link linkend="_dynlink__interface_8h_1a830e6cbd1f246ffc55445c07b4bf3c75">dynlink_impl_interface_load</link>) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_dynlink__interface_8h_1ae1d2ad5a0c69c2398553baf0e12b4bd5">dynlink_impl_interface_symbol</link>) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>, <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>, <link linkend="_dynlink__type_8h_1a3c96aed7c9128f3d4be1c9b2b75174c5">dynlink_symbol_name</link>, <link linkend="_dynlink__interface_8h_1a7db607b0a040bc9bf987ca5e1c5539cc">dynlink_symbol_addr_ptr</link>)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_dynlink__interface_8h_1ac3977092576cd5ab38b0663726f6a4b8">dynlink_impl_interface_unload</link>) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>, <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>)</para>
</listitem>
            <listitem><para>typedef dynlink_impl_interface(* <link linkend="_dynlink__interface_8h_1a63b6182b20ad6de2cbb8b71f7c840056">dynlink_impl_interface_singleton_ptr</link>) (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>DYNLINK_API <link linkend="_dynlink__interface_8h_1a63b6182b20ad6de2cbb8b71f7c840056">dynlink_impl_interface_singleton_ptr</link> <link linkend="_dynlink__interface_8h_1a6640f7bd2ba179bbb8b30c929530d86e">dynlink_interface</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_dynlink__interface_8h_1ad8a26dbee90709b64932f5bcd4e596de"/>    <section>
    <title>DYNLINK_SYMBOL_PREFIX_STR</title>
<indexterm><primary>DYNLINK_SYMBOL_PREFIX_STR</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>DYNLINK_SYMBOL_PREFIX_STR</secondary></indexterm>
<para><computeroutput>#define DYNLINK_SYMBOL_PREFIX_STR( )   	<link linkend="_preprocessor__stringify_8h_1ac094787bffb9429bdf67ef52744a6ddb">PREPROCESSOR_STRINGIFY_OR_EMPTY</link>(<link linkend="_dynlink__impl__symbol__win32_8h_1ac5d66723717583b0efbc7c23f9ccd059">DYNLINK_SYMBOL_PREFIX</link>)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1a3b16a8e9c3d36c7699863ae99beea1c3"/>    <section>
    <title>DYNLINK_SYMBOL_NAME</title>
<indexterm><primary>DYNLINK_SYMBOL_NAME</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>DYNLINK_SYMBOL_NAME</secondary></indexterm>
<para><computeroutput>#define DYNLINK_SYMBOL_NAME( name)   	<link linkend="_preprocessor__concatenation_8h_1ab8632cfb0b9b4b00a80bd865f34223d1">PREPROCESSOR_CONCAT</link>(<link linkend="_dynlink__impl__symbol__win32_8h_1ac5d66723717583b0efbc7c23f9ccd059">DYNLINK_SYMBOL_PREFIX</link>, name)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1a21a82e97886b5fff8860f9ad4faed545"/>    <section>
    <title>DYNLINK_SYMBOL_NAME_STR</title>
<indexterm><primary>DYNLINK_SYMBOL_NAME_STR</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>DYNLINK_SYMBOL_NAME_STR</secondary></indexterm>
<para><computeroutput>#define DYNLINK_SYMBOL_NAME_STR( name)   	<link linkend="_preprocessor__stringify_8h_1a687b07489efaaf2b4a03568c2117d32b">PREPROCESSOR_STRINGIFY</link>(<link linkend="_dynlink__interface_8h_1a3b16a8e9c3d36c7699863ae99beea1c3">DYNLINK_SYMBOL_NAME</link>(name))</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1af77a57ea1674e4e345399d4267422185"/>    <section>
    <title>DYNLINK_SYMBOL_STR</title>
<indexterm><primary>DYNLINK_SYMBOL_STR</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>DYNLINK_SYMBOL_STR</secondary></indexterm>
<para><computeroutput>#define DYNLINK_SYMBOL_STR( name)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_dynlink__interface_8h_1ad8a26dbee90709b64932f5bcd4e596de">DYNLINK_SYMBOL_PREFIX_STR</link>()&#32;\
&#32;&#32;&#32;&#32;name
</programlisting></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_dynlink__interface_8h_1a7db607b0a040bc9bf987ca5e1c5539cc"/>    <section>
    <title>dynlink_symbol_addr_ptr</title>
<indexterm><primary>dynlink_symbol_addr_ptr</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_symbol_addr_ptr</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_dynlink__impl__symbol__beos_8h_1abedcfb8b256940cff900c9a92c628aaf">dynlink_symbol_addr</link>* <link linkend="_dynlink__interface_8h_1a7db607b0a040bc9bf987ca5e1c5539cc">dynlink_symbol_addr_ptr</link></computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1abaedd3442a0b899dc1abad65ff6f41c2"/>    <section>
    <title>dynlink_impl_interface_extension</title>
<indexterm><primary>dynlink_impl_interface_extension</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_extension</secondary></indexterm>
<para><computeroutput>typedef const char*(* dynlink_impl_interface_extension) (void)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1a983f933be9d7b9651828a1ed51b937fb"/>    <section>
    <title>dynlink_impl_interface_get_name</title>
<indexterm><primary>dynlink_impl_interface_get_name</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_get_name</secondary></indexterm>
<para><computeroutput>typedef void(* dynlink_impl_interface_get_name) (<link linkend="_dynlink__type_8h_1a11b32b057aa8ea512ea863e185547cd0">dynlink_name</link>, <link linkend="_dynlink__type_8h_1ae1d8bf84ee2ad46a7513e6d4eb6782fb">dynlink_name_impl</link>, size_t)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1a830e6cbd1f246ffc55445c07b4bf3c75"/>    <section>
    <title>dynlink_impl_interface_load</title>
<indexterm><primary>dynlink_impl_interface_load</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_load</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>(* dynlink_impl_interface_load) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1ae1d2ad5a0c69c2398553baf0e12b4bd5"/>    <section>
    <title>dynlink_impl_interface_symbol</title>
<indexterm><primary>dynlink_impl_interface_symbol</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_symbol</secondary></indexterm>
<para><computeroutput>typedef int(* dynlink_impl_interface_symbol) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>, <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>, <link linkend="_dynlink__type_8h_1a3c96aed7c9128f3d4be1c9b2b75174c5">dynlink_symbol_name</link>, <link linkend="_dynlink__interface_8h_1a7db607b0a040bc9bf987ca5e1c5539cc">dynlink_symbol_addr_ptr</link>)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1ac3977092576cd5ab38b0663726f6a4b8"/>    <section>
    <title>dynlink_impl_interface_unload</title>
<indexterm><primary>dynlink_impl_interface_unload</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_unload</secondary></indexterm>
<para><computeroutput>typedef int(* dynlink_impl_interface_unload) (<link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link>, <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link>)</computeroutput></para>    </section><anchor xml:id="_dynlink__interface_8h_1a63b6182b20ad6de2cbb8b71f7c840056"/>    <section>
    <title>dynlink_impl_interface_singleton_ptr</title>
<indexterm><primary>dynlink_impl_interface_singleton_ptr</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_impl_interface_singleton_ptr</secondary></indexterm>
<para><computeroutput>typedef dynlink_impl_interface(* dynlink_impl_interface_singleton_ptr) (void)</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_dynlink__interface_8h_1a6640f7bd2ba179bbb8b30c929530d86e"/>    <section>
    <title>dynlink_interface()</title>
<indexterm><primary>dynlink_interface</primary><secondary>dynlink_interface.h</secondary></indexterm>
<indexterm><primary>dynlink_interface.h</primary><secondary>dynlink_interface</secondary></indexterm>
<para><computeroutput>DYNLINK_API <link linkend="_dynlink__interface_8h_1a63b6182b20ad6de2cbb8b71f7c840056">dynlink_impl_interface_singleton_ptr</link> dynlink_interface (void )</computeroutput></para><para>

<para>Get the dynlink interface for specified platform. </para>
</para>

<para><formalpara><title>Returns</title>

<para>A constant pointer to the platform singleton </para>
</formalpara>
</para>
</section>
</section>
</section>
