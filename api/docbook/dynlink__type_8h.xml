<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dynlink__type_8h" xml:lang="en-US">
<title>dynlink_type.h File Reference</title>
<indexterm><primary>dynlink_type.h</primary></indexterm>
<programlisting>#include &lt;dynlink/dynlink_api.h&gt;
#include &lt;portability/portability_library_path.h&gt;
</programlisting>Include dependency graph for dynlink_type.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dynlink__type_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dynlink__type_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct dynlink_type * <link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link></para>
</listitem>
            <listitem><para>typedef const char * <link linkend="_dynlink__type_8h_1a8e2c4f432f3e87b96997514ab62cf2c2">dynlink_path</link></para>
</listitem>
            <listitem><para>typedef const char * <link linkend="_dynlink__type_8h_1a11b32b057aa8ea512ea863e185547cd0">dynlink_name</link></para>
</listitem>
            <listitem><para>typedef const char * <link linkend="_dynlink__type_8h_1a3c96aed7c9128f3d4be1c9b2b75174c5">dynlink_symbol_name</link></para>
</listitem>
            <listitem><para>typedef portability_library_path_str <link linkend="_dynlink__type_8h_1a1c4b6d7db5f1f2c3c881bca3c701e6ae">dynlink_library_path_str</link></para>
</listitem>
            <listitem><para>typedef void * <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link></para>
</listitem>
            <listitem><para>typedef char <link linkend="_dynlink__type_8h_1ae1d8bf84ee2ad46a7513e6d4eb6782fb">dynlink_name_impl</link>[PORTABILITY_PATH_SIZE]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873"/>    <section>
    <title>dynlink</title>
<indexterm><primary>dynlink</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink</secondary></indexterm>
<para><computeroutput>typedef struct dynlink_type* <link linkend="_dynlink__type_8h_1a78848577adb8462475a9af5d06560873">dynlink</link></computeroutput></para>
<para>Dynamically linked shared object handle </para>
    </section><anchor xml:id="_dynlink__type_8h_1a8e2c4f432f3e87b96997514ab62cf2c2"/>    <section>
    <title>dynlink_path</title>
<indexterm><primary>dynlink_path</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_path</secondary></indexterm>
<para><computeroutput>typedef const char* <link linkend="_dynlink__type_8h_1a8e2c4f432f3e87b96997514ab62cf2c2">dynlink_path</link></computeroutput></para>
<para>Dynamically linked shared object path </para>
    </section><anchor xml:id="_dynlink__type_8h_1a11b32b057aa8ea512ea863e185547cd0"/>    <section>
    <title>dynlink_name</title>
<indexterm><primary>dynlink_name</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_name</secondary></indexterm>
<para><computeroutput>typedef const char* <link linkend="_dynlink__type_8h_1a11b32b057aa8ea512ea863e185547cd0">dynlink_name</link></computeroutput></para>
<para>Dynamically linked shared object name </para>
    </section><anchor xml:id="_dynlink__type_8h_1a3c96aed7c9128f3d4be1c9b2b75174c5"/>    <section>
    <title>dynlink_symbol_name</title>
<indexterm><primary>dynlink_symbol_name</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_symbol_name</secondary></indexterm>
<para><computeroutput>typedef const char* <link linkend="_dynlink__type_8h_1a3c96aed7c9128f3d4be1c9b2b75174c5">dynlink_symbol_name</link></computeroutput></para>
<para>Dynamically linked shared object symbol name </para>
    </section><anchor xml:id="_dynlink__type_8h_1a1c4b6d7db5f1f2c3c881bca3c701e6ae"/>    <section>
    <title>dynlink_library_path_str</title>
<indexterm><primary>dynlink_library_path_str</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_library_path_str</secondary></indexterm>
<para><computeroutput>typedef portability_library_path_str <link linkend="_dynlink__type_8h_1a1c4b6d7db5f1f2c3c881bca3c701e6ae">dynlink_library_path_str</link></computeroutput></para>
<para>Dynamically linked shared object symbol name </para>
    </section><anchor xml:id="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1"/>    <section>
    <title>dynlink_impl</title>
<indexterm><primary>dynlink_impl</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_impl</secondary></indexterm>
<para><computeroutput>typedef void* <link linkend="_dynlink__type_8h_1ac50870968e2343c8886b162515a122f1">dynlink_impl</link></computeroutput></para>
<para>Dynamically linked shared object implementation </para>
    </section><anchor xml:id="_dynlink__type_8h_1ae1d8bf84ee2ad46a7513e6d4eb6782fb"/>    <section>
    <title>dynlink_name_impl</title>
<indexterm><primary>dynlink_name_impl</primary><secondary>dynlink_type.h</secondary></indexterm>
<indexterm><primary>dynlink_type.h</primary><secondary>dynlink_name_impl</secondary></indexterm>
<para><computeroutput>typedef char dynlink_name_impl[PORTABILITY_PATH_SIZE]</computeroutput></para>
<para>Allocated copy of dynamically linked shared object name </para>
</section>
</section>
</section>
